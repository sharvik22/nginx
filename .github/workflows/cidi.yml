---
name: Docker Build and Deploy

on:
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY: docker.io
  IMAGE_NAME: sharvik40/nginx-app
  K8S_DEPLOYMENT: nginx-app-deployment
  K8S_NAMESPACE: default
  CONTAINER_NAME: nginx-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: azure/setup-kubectl@v3
      
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.K8S_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Force deployment update
        run: |
          # Устанавливаем стратегию Recreate
          kubectl patch deployment/${{ env.K8S_DEPLOYMENT }} \
            -n ${{ env.K8S_NAMESPACE }} \
            --type merge \
            --patch '{"spec":{"strategy":{"type":"Recreate"}}}' \
            --insecure-skip-tls-verify
          
          # Обновляем образ
          kubectl set image deployment/${{ env.K8S_DEPLOYMENT }} \
            ${{ env.CONTAINER_NAME }}=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} \
            -n ${{ env.K8S_NAMESPACE }} \
            --insecure-skip-tls-verify
          
          # Принудительно перезапускаем
          kubectl rollout restart deployment/${{ env.K8S_DEPLOYMENT }} \
            -n ${{ env.K8S_NAMESPACE }} \
            --insecure-skip-tls-verify
          
          # Ждем завершения
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT }} \
            -n ${{ env.K8S_NAMESPACE }} \
            --insecure-skip-tls-verify \
            --timeout=300s

      - name: Verify deployment
        run: |
          echo "=== Final Pods Status ==="
          kubectl get pods -n ${{ env.K8S_NAMESPACE }} \
            -l app=nginx-app \
            -o jsonpath='{range .items[*]}{.metadata.name}{": "}{.spec.containers[0].image}{"\n"}{end}' \
            --insecure-skip-tls-verify
          
          echo ""
          echo "=== Deployment Status ==="
          kubectl get deployment/${{ env.K8S_DEPLOYMENT }} -n ${{ env.K8S_NAMESPACE }} -o wide --insecure-skip-tls-verify
