---
name: Docker Build and Deploy

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: docker.io
  IMAGE_NAME: sharvik40/nginx-app
  K8S_NAMESPACE: default
  K8S_DEPLOYMENT: nginx-app

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true

  deploy-to-k8s:
    name: Deploy to Kubernetes
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Verify SSH access
        run: ssh -o StrictHostKeyChecking=no ubuntu@51.250.87.108 "hostname"

      - name: Establish SSH tunnel
        run: |
          ssh -fN -L 6443:localhost:6443 ubuntu@51.250.87.108 &
          sleep 5
          netstat -tuln | grep 6443  # Проверка туннеля

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.K8S_CA }}
              server: https://localhost:6443
            name: yc-cluster
          contexts:
          - context:
              cluster: yc-cluster
              user: yc-user
            name: yc-context
          current-context: yc-context
          kind: Config
          users:
          - name: yc-user
            user:
              client-certificate-data: ${{ secrets.K8S_CLIENT_CERT }}
              client-key-data: ${{ secrets.K8S_CLIENT_KEY }}
          EOF

      - name: Deploy with tag
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          kubectl -n ${{ env.K8S_NAMESPACE }} set image \
            deployment/${{ env.K8S_DEPLOYMENT }} \
            nginx=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG
          kubectl rollout status -n ${{ env.K8S_NAMESPACE }} deployment/${{ env.K8S_DEPLOYMENT }}
